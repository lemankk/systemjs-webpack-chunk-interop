{"version":3,"file":"index.min.js","sources":["../src/index.js"],"sourcesContent":["(function (global) {\n  const systemPrototype = global.System.constructor.prototype;\n\n  const asyncImportPrefix = \"systemjs://m/\";\n  const getUrl = (id) => asyncImportPrefix + id;\n  systemPrototype.appendImportMap = async function (packages) {\n    const loader = this;\n    loader.asyncMap = loader.asyncMap || {};\n    loader.asyncMap = {\n      ...loader.asyncMap,\n      ...packages,\n    };\n\n    // creating import map from package\n    const packageNames = Object.keys(packages);\n    const sjsMapElm = document.createElement(\"script\");\n\n    // meet import map rules\n    sjsMapElm.type = \"systemjs-importmap\";\n\n    const packageMap = {};\n    for (const name of packageNames) {\n      // Use it directly if the package already provide an url, other assume that is a internal url with import syntax\n      packageMap[name] = typeof packageNames[name] === \"string\" ? packageNames[name] : getUrl(name);\n    }\n\n    sjsMapElm.innerText = JSON.stringify({\n      imports: packageMap,\n    });\n    document.head.appendChild(sjsMapElm);\n    return loader.prepareImport(true);\n  };\n  const existingHook = systemPrototype.instantiate;\n  systemPrototype.instantiate = function (url, parentUrl) {\n    var loader = this;\n\n    // use original loader\n    if (url.indexOf(asyncImportPrefix) !== 0) {\n      if (/^https?:/.test(url)) {\n        return import(/* webpackIgnore: true */ url);\n      } else {\n        return existingHook.apply(loader, arguments);\n      }\n    }\n    var packageName = url.substr(asyncImportPrefix.length);\n    return new Promise(async (resolve, reject) => {\n      try {\n        const register = loader.getRegister();\n        const importer = loader.asyncMap[packageName];\n\n        // Using Webpack import()\n        const context = await importer();\n\n        loader.set(url, context);\n        resolve(register);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  };\n  // eslint-disable-next-line\n})(typeof self !== \"undefined\" ? self : global);\n"],"names":["global","systemPrototype","System","constructor","prototype","appendImportMap","packages","loader","this","asyncMap","packageNames","Object","keys","sjsMapElm","document","createElement","type","packageMap","name","innerText","JSON","stringify","imports","head","appendChild","prepareImport","existingHook","instantiate","url","parentUrl","indexOf","test","Promise","apply","arguments","packageName","substr","length","resolve","reject","register","getRegister","importer","context","set","self"],"mappings":"gyCAAA,SAAWA,OACHC,EAAkBD,EAAOE,OAAOC,YAAYC,UAIlDH,EAAgBI,4DAAkB,WAAgBC,0GAC1CC,EAASC,MACRC,SAAWF,EAAOE,UAAY,GACrCF,EAAOE,gBACFF,EAAOE,UACPH,GAICI,EAAeC,OAAOC,KAAKN,IAC3BO,EAAYC,SAASC,cAAc,WAG/BC,KAAO,qBAEXC,EAAa,SACAP,iBAARQ,OAETD,EAAWC,GAAsC,iBAAvBR,EAAaQ,GAAqBR,EAAaQ,GApBnD,gBAoBkEA,SAG1FL,EAAUM,UAAYC,KAAKC,UAAU,CACnCC,QAASL,IAEXH,SAASS,KAAKC,YAAYX,qBACnBN,EAAOkB,eAAc,+GAExBC,EAAezB,EAAgB0B,YACrC1B,EAAgB0B,YAAc,SAAUC,EAAKC,OACvCtB,EAASC,QAG0B,IAAnCoB,EAAIE,QAlCgB,uBAmClB,WAAWC,KAAKH,GACXI,oDAAiCJ,OAEjCF,EAAaO,MAAM1B,EAAQ2B,eAGlCC,EAAcP,EAAIQ,OAzCE,gBAyCuBC,eACxC,IAAIL,oDAAQ,WAAOM,EAASC,6GAEzBC,EAAWjC,EAAOkC,cAClBC,EAAWnC,EAAOE,SAAS0B,YAGXO,WAAhBC,SAENpC,EAAOqC,IAAIhB,EAAKe,GAChBL,EAAQE,qDAERD,4HAxDR,CA6DmB,oBAATM,KAAuBA,KAAO7C"}